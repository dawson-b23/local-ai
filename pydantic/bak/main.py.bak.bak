# pydantic-ai/main.py
from fastapi import FastAPI, HTTPException
from models import QueryInput
from agents import create_master_agent
from ingestion import process_file
from datetime import datetime
import logging

logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

app = FastAPI()

@app.post("/rag-docs")
async def handle_query(query: QueryInput):
    master_agent = create_master_agent()
    try:
        logger.debug(f"Processing query: {query.chatInput}")
        response = master_agent.invoke({"input": query.chatInput})
        logger.debug(f"Agent response: {response}")
        return {"response": response["output"]}
    except Exception as e:
        logger.error(f"Agent error: {str(e)}", exc_info=True)
        return {
            "response": f"No good answer found. Please contact Dawson Burgess at {datetime.now()}.",
            "error": str(e)
        }

@app.post("/ingest-file")
async def ingest_file_endpoint(file_path: str):
    result = process_file(file_path)
    return result
